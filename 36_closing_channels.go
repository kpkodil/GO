// _Закрытие_ канала указывает на то, что больше значений
// отправляться не будет. Это может быть полезно для
// уведомления получателей канала о завершении работы.

package main

import "fmt"

// В этом примере мы будем использовать канал `jobs` для
// передачи задач от главной горутины к рабочей горутине.
// Когда у нас больше не будет задач для рабочего, мы
// закроем канал `jobs`.
func main() {
	jobs := make(chan int, 5)
	done := make(chan bool)

	// Вот горутина рабочего. Она повторно получает
	// значения из канала `jobs` с помощью `j, more := <-jobs`.
	// В этой специальной форме получения `more` будет `false`,
	// если канал `jobs` был закрыт и все значения уже были
	// получены. Мы используем это для уведомления через `done`,
	// когда мы выполнили все задачи.
	go func() {
		for {
			j, more := <-jobs
			if more {
				fmt.Println("получена задача", j)
			} else {
				fmt.Println("все задачи получены")
				done <- true
				return
			}
		}
	}()

	// Мы отправляем 3 задачи рабочему через канал `jobs`,
	// затем закрываем его.
	for j := 1; j <= 3; j++ {
		jobs <- j
		fmt.Println("отправлена задача", j)
	}
	close(jobs)
	fmt.Println("все задачи отправлены")

	// Мы ждем завершения работы с помощью подхода
	// [синхронизации](channel-synchronization),
	// который мы рассматривали ранее.
	<-done

	// Чтение из закрытого канала проходит успешно,
	// возвращая нулевое значение базового типа.
	// Дополнительное значение `ok` будет `true`, если
	// полученное значение было доставлено успешной отправкой
	// в канал, или `false`, если это нулевое значение, созданное
	// потому, что канал закрыт и пуст.
	_, ok := <-jobs
	fmt.Println("получены дополнительные задачи:", ok)
}

// Пояснение:
// Закрытие канала:

// Закрытие канала с помощью close() указывает получателям, что больше не будет новых значений. Это важно для сигнализации завершения работы и предотвращения дальнейших попыток отправки данных в канал.
// Рабочая горутина:

// В горутине рабочего используется конструкция j, more := <-jobs для получения значений из канала. Если more равно false, это означает, что канал закрыт и все значения уже были получены. В этом случае рабочая горутина завершает свою работу и отправляет сигнал в канал done.
// Отправка задач:

// Главная функция отправляет три задачи в канал jobs и затем закрывает его с помощью close(jobs). Закрытие канала сигнализирует рабочей горутине, что больше задач не будет.
// Ожидание завершения работы:

// После закрытия канала jobs, главная функция ожидает сигнала от канала done, чтобы убедиться, что рабочая горутина завершила свою работу.
// Чтение из закрытого канала:

// Чтение из закрытого канала возвращает нулевое значение типа канала и флаг ok, который указывает, было ли значение успешно отправлено в канал (true) или это нулевое значение, потому что канал закрыт и пуст (false).
