// Мы можем использовать каналы для синхронизации выполнения
// горутин. Вот пример использования блокирующего получения
// для ожидания завершения горутины.
// Когда нужно ждать завершения нескольких горутин,
// лучше использовать [WaitGroup](waitgroups).

package main

import (
	"fmt"
	"time"
)

// Это функция, которая будет выполняться в горутине. Канал `done`
// будет использоваться для уведомления другой горутины о том,
// что работа этой функции завершена.
func worker(done chan bool) {
	fmt.Print("working...")
	time.Sleep(time.Second) // Имитация работы, длится 1 секунду
	fmt.Println("done")

	// Отправляем значение в канал, чтобы уведомить, что работа завершена.
	done <- true
}

func main() {

	// Запускаем горутину worker, передавая ей канал для уведомления.
	done := make(chan bool, 1)
	go worker(done)

	// Блокируем выполнение, пока не получим уведомление от worker.
	<-done
}

// Пояснение:
// Горутины и синхронизация: В данном примере запускается горутина, которая выполняет некоторую работу (имитируется с помощью time.Sleep(1 * time.Second)), и по её завершении она уведомляет основную программу через канал done.

// Использование канала для синхронизации: Канал done служит механизмом уведомления. После завершения работы в функции worker, в канал отправляется значение true, сигнализируя о том, что горутина завершила свою задачу.

// Блокирующее получение: В основной функции main, выполнение программы блокируется с помощью <-done до тех пор, пока горутина не отправит уведомление через канал. Это гарантирует, что программа не завершится, пока работа горутины не будет закончена.

// Зачем это нужно:
// Такой подход помогает синхронизировать выполнение между горутинами, чтобы убедиться, что определенные задачи завершены до продолжения выполнения программы.
// Это особенно полезно в параллельных или асинхронных вычислениях, когда результат работы одной горутины нужен до выполнения других операций.
// Для более сложных случаев, например, когда нужно дождаться завершения множества горутин, рекомендуется использовать WaitGroup из пакета sync.
