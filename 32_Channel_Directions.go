// Когда вы используете каналы в качестве параметров функций,
// можно указать, предназначен ли канал только для отправки
// или только для получения значений. Такая конкретизация
// увеличивает безопасность типов программы.

package main

import "fmt"

// Функция `ping` принимает канал только для отправки
// значений. Попытка получения из этого канала приведет к
// ошибке компиляции.
func ping(pings chan<- string, msg string) {
	pings <- msg // Отправка сообщения в канал
}

// Функция `pong` принимает один канал для получения данных (`pings`)
// и другой для отправки данных (`pongs`).
func pong(pings <-chan string, pongs chan<- string) {
	msg := <-pings // Получение сообщения из канала `pings`
	pongs <- msg   // Отправка сообщения в канал `pongs`
}

func main() {
	// Создаем два канала с буфером на одно сообщение каждый.
	pings := make(chan string, 1)
	pongs := make(chan string, 1)

	// Вызываем функцию `ping` для отправки сообщения в канал `pings`.
	ping(pings, "переданное сообщение")

	// Вызываем функцию `pong`, которая перенаправляет сообщение
	// из канала `pings` в канал `pongs`.
	pong(pings, pongs)

	// Получаем и выводим сообщение из канала `pongs`.
	fmt.Println(<-pongs)
}

// Пояснение:
// Однонаправленные каналы: В Go вы можете ограничить использование каналов для передачи данных или для получения данных. Например:

// chan<- string — это канал, в который можно только отправлять значения.
// <-chan string — это канал, из которого можно только получать значения.
// Такое ограничение позволяет повысить безопасность типов, предотвращая ошибки, когда каналы используются не по назначению.

// Функция ping: Эта функция принимает канал, в который можно только отправлять данные (chan<-). Внутри функции отправляется сообщение msg в этот канал.

// Функция pong: Принимает один канал для получения данных (<-chan) и другой канал для отправки данных (chan<-). Сообщение сначала извлекается из канала pings, а затем передается в канал pongs.

// Главная функция main: Здесь мы создаем два канала с буфером на одно сообщение каждый, затем последовательно вызываем ping для отправки сообщения в pings, и pong, которая перенаправляет сообщение в pongs. В конце программа выводит сообщение, извлеченное из канала pongs.
