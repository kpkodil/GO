// В Go можно использовать пользовательские типы в качестве ошибок,
// реализовав метод `Error()`. Вот пример, который показывает,
// как создать пользовательский тип ошибки и использовать его
// в функции.

package main

import (
	"errors"
	"fmt"
)

// Пользовательский тип ошибки обычно имеет суффикс "Error".
type argError struct {
	arg     int
	message string
}

// Добавление метода `Error` делает `argError` реализацией
// интерфейса `error`.
func (e *argError) Error() string {
	return fmt.Sprintf("%d - %s", e.arg, e.message)
}

func f(arg int) (int, error) {
	if arg == 42 {
		// Возвращаем нашу пользовательскую ошибку.
		return -1, &argError{arg, "can't work with it"}
	}
	return arg + 3, nil
}

func main() {

	// `errors.As` - это более продвинутая версия `errors.Is`.
	// Она проверяет, что данная ошибка (или любая ошибка в ее цепочке)
	// соответствует конкретному типу ошибки и преобразует
	// ее в значение этого типа, возвращая `true`. Если совпадения нет,
	// возвращается `false`.
	_, err := f(42)
	var ae *argError
	if errors.As(err, &ae) {
		fmt.Println("Error: ", err.Error())
		fmt.Println(ae.arg)
		fmt.Println(ae.message)
	} else {
		fmt.Println("err doesn't match argError")
	}
}

// Объяснение:

// Тип argError:
// Это пользовательский тип ошибки с двумя полями: arg и message. Метод Error() формирует строку с описанием ошибки, используя эти поля.

// Функция f:
// Проверяет аргумент и возвращает ошибку типа *argError, если аргумент равен 42. В противном случае возвращается результат без ошибки.

// Обработка ошибок в main:
// Используется функция errors.As, чтобы проверить, соответствует ли ошибка типу *argError, и если да, то извлечь значение и вывести его. Функция errors.As позволяет обрабатывать ошибки с дополнительной информацией, если они являются частью цепочки ошибок.

// Ключевые моменты:
// Реализация интерфейса error требует метода Error(), который возвращает строку с описанием ошибки.
// Функция errors.As позволяет проверять и извлекать ошибки определенного типа, что упрощает обработку ошибок и их диагностику.
